{"version":3,"file":"ee19ddf3be56f4e2fd0079e0174ed6ae79c02111-08c8b89ab7e0ebe3f804.js","mappings":"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","sources":["webpack://s12m.github.io/./node_modules/@heroicons/react/outline/esm/ChevronDownIcon.js","webpack://s12m.github.io/../src/image-utils.ts","webpack://s12m.github.io/../src/components/hooks.ts","webpack://s12m.github.io/../src/components/picture.tsx","webpack://s12m.github.io/../src/components/layout-wrapper.tsx","webpack://s12m.github.io/../src/components/placeholder.tsx","webpack://s12m.github.io/../src/components/main-image.tsx","webpack://s12m.github.io/../src/components/gatsby-image.browser.tsx","webpack://s12m.github.io/../src/components/gatsby-image.server.tsx","webpack://s12m.github.io/../src/components/static-image.server.tsx","webpack://s12m.github.io/../src/components/static-image.tsx","webpack://s12m.github.io/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://s12m.github.io/./src/components/Container.tsx","webpack://s12m.github.io/./node_modules/@heroicons/react/outline/esm/ExternalLinkIcon.js","webpack://s12m.github.io/./src/components/ExternalLink.tsx","webpack://s12m.github.io/./src/components/InquiryLink.tsx","webpack://s12m.github.io/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://s12m.github.io/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://s12m.github.io/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://s12m.github.io/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://s12m.github.io/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://s12m.github.io/./node_modules/hamburger-react/dist-esm/Burger.js","webpack://s12m.github.io/./node_modules/hamburger-react/dist-esm/Tilt.js","webpack://s12m.github.io/./node_modules/hamburger-react/dist-esm/index.js","webpack://s12m.github.io/./src/components/Layout.tsx","webpack://s12m.github.io/./src/components/MetaTags.tsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction ChevronDownIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19 9l-7 7-7-7\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(ChevronDownIcon);\nexport default ForwardRef;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        document.addEventListener(`load`, function onLoadListener() {\n          document.removeEventListener(`load`, onLoadListener)\n\n          onStartLoad?.({\n            wasCached: true,\n          })\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React from 'react'\n\nconst Container: React.FC<HasChildrenProps> = ({ children }) => {\n  return (\n    <div className='container mx-auto max-w-6xl px-4 xl:px-0'>\n      {children}\n    </div>\n  )\n}\n\nexport default Container\n","import * as React from \"react\";\n\nfunction ExternalLinkIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(ExternalLinkIcon);\nexport default ForwardRef;","import React from 'react'\nimport { ExternalLinkIcon } from '@heroicons/react/outline'\n\ntype Props = HasChildrenProps & {\n  href: string\n}\n\nconst ExternalLink: React.FC<Props> = ({ children, href }) => {\n  return (\n    <a href={href} target='_blank' className='underline hover:underline'>\n      {children}<ExternalLinkIcon className='inline ml-1' width={16} />\n    </a>\n  )\n}\n\nexport default ExternalLink\n","import React from 'react'\n\nconst InquiryLink: React.FC<HasChildrenProps> = ({ children }) => {\n  return (\n    <a href='mailto:contact@smartalgorithm.co.jp' className='btn justify-start bg-s12m-red border-s12m-red text-s12m-gray'>\n      {children}\n    </a>\n  )\n}\n\nexport default InquiryLink\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _slicedToArray from \"/home/runner/work/s12m.github.io/s12m.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nvar area = 48;\nexport var Burger = function Burger(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? 'left' : _ref$direction,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === void 0 ? 'md' : _ref$distance,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 0.4 : _ref$duration,\n      _ref$easing = _ref.easing,\n      easing = _ref$easing === void 0 ? 'cubic-bezier(0, 0, 0, 1)' : _ref$easing,\n      _ref$hideOutline = _ref.hideOutline,\n      hideOutline = _ref$hideOutline === void 0 ? true : _ref$hideOutline,\n      label = _ref.label,\n      _ref$lines = _ref.lines,\n      lines = _ref$lines === void 0 ? 3 : _ref$lines,\n      onToggle = _ref.onToggle,\n      render = _ref.render,\n      _ref$rounded = _ref.rounded,\n      rounded = _ref$rounded === void 0 ? false : _ref$rounded,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 32 : _ref$size,\n      toggle = _ref.toggle,\n      toggled = _ref.toggled;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggledInternal = _useState2[0],\n      toggleInternal = _useState2[1];\n\n  var width = Math.max(12, Math.min(area, size));\n  var room = Math.round((area - width) / 2);\n  var barHeightRaw = width / 12;\n  var barHeight = Math.round(barHeightRaw);\n  var space = distance === 'lg' ? 0.25 : distance === 'sm' ? 0.75 : 0.5;\n  var marginRaw = width / (lines * (space + (lines === 3 ? 1 : 1.25)));\n  var margin = Math.round(marginRaw);\n  var height = barHeight * lines + margin * (lines - 1);\n  var topOffset = Math.round((area - height) / 2);\n  var translate = lines === 3 ? distance === 'lg' ? 4.0425 : distance === 'sm' ? 5.1625 : 4.6325 : distance === 'lg' ? 6.7875 : distance === 'sm' ? 8.4875 : 7.6675;\n  var deviation = (barHeightRaw - barHeight + (marginRaw - margin)) / (lines === 3 ? 1 : 2);\n  var move = parseFloat((width / translate - deviation / (4 / 3)).toFixed(2));\n  var time = Math.max(0, duration);\n  var burgerStyles = {\n    cursor: 'pointer',\n    height: \"\".concat(area, \"px\"),\n    position: 'relative',\n    transition: \"\".concat(time, \"s \").concat(easing),\n    userSelect: 'none',\n    width: \"\".concat(area, \"px\")\n  };\n  var barStyles = {\n    background: color,\n    height: \"\".concat(barHeight, \"px\"),\n    left: \"\".concat(room, \"px\"),\n    position: 'absolute'\n  };\n\n  if (hideOutline) {\n    burgerStyles['outline'] = 'none';\n  }\n\n  if (rounded) {\n    barStyles['borderRadius'] = '9em';\n  }\n\n  var toggleFunction = toggle || toggleInternal;\n  var isToggled = toggled !== undefined ? toggled : toggledInternal;\n\n  var handler = function handler() {\n    toggleFunction(!isToggled);\n    if (typeof onToggle === 'function') onToggle(!isToggled);\n  };\n\n  return render({\n    barHeight: barHeight,\n    barStyles: barStyles,\n    burgerStyles: burgerStyles,\n    easing: easing,\n    handler: handler,\n    isLeft: direction === 'left',\n    isToggled: isToggled,\n    label: label,\n    margin: margin,\n    move: move,\n    time: time,\n    topOffset: topOffset,\n    width: width\n  });\n};","import _defineProperty from \"/home/runner/work/s12m.github.io/s12m.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { Burger } from './Burger';\nimport React from 'react';\nexport var Tilt = function Tilt(props) {\n  return /*#__PURE__*/React.createElement(Burger, _extends({}, props, {\n    render: function render(o) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hamburger-react\",\n        \"aria-label\": o.label,\n        \"aria-expanded\": o.isToggled,\n        onClick: o.handler,\n        onKeyUp: function onKeyUp(e) {\n          return e.key === 'Enter' && o.handler();\n        },\n        role: \"button\",\n        style: _objectSpread(_objectSpread({}, o.burgerStyles), {}, {\n          transform: \"\".concat(o.isToggled ? \"rotate(\".concat(90 * (o.isLeft ? -1 : 1), \"deg)\") : 'none')\n        }),\n        tabIndex: 0\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: _objectSpread(_objectSpread({}, o.barStyles), {}, {\n          width: \"\".concat(o.width, \"px\"),\n          top: \"\".concat(o.topOffset, \"px\"),\n          transition: \"\".concat(o.time, \"s \").concat(o.easing),\n          transform: \"\".concat(o.isToggled ? \"rotate(\".concat(45 * (o.isLeft ? -1 : 1), \"deg) translate(\").concat(o.move * (o.isLeft ? -1 : 1), \"px, \").concat(o.move, \"px)\") : 'none')\n        })\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: _objectSpread(_objectSpread({}, o.barStyles), {}, {\n          width: \"\".concat(o.width, \"px\"),\n          top: \"\".concat(o.topOffset + o.barHeight + o.margin, \"px\"),\n          transition: \"\".concat(o.time, \"s \").concat(o.easing),\n          transform: \"\".concat(o.isToggled ? 'scaleX(0)' : 'none')\n        })\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: _objectSpread(_objectSpread({}, o.barStyles), {}, {\n          width: \"\".concat(o.width, \"px\"),\n          top: \"\".concat(o.topOffset + o.barHeight * 2 + o.margin * 2, \"px\"),\n          transition: \"\".concat(o.time, \"s \").concat(o.easing),\n          transform: \"\".concat(o.isToggled ? \"rotate(\".concat(45 * (o.isLeft ? 1 : -1), \"deg) translate(\").concat(o.move * (o.isLeft ? -1 : 1), \"px, \").concat(o.move * -1, \"px)\") : 'none')\n        })\n      }));\n    }\n  }));\n};","import { Tilt as Hamburger } from './Tilt';\nimport { Cross } from './Cross';\nimport { Divide } from './Divide';\nimport { Fade } from './Fade';\nimport { Pivot } from './Pivot';\nimport { Rotate } from './Rotate';\nimport { Slant } from './Slant';\nimport { Sling } from './Sling';\nimport { Spin } from './Spin';\nimport { Spiral } from './Spiral';\nimport { Squash } from './Squash';\nimport { Squeeze } from './Squeeze';\nimport { Turn } from './Turn';\nimport { Twirl } from './Twirl';\nexport default Hamburger;\nexport { Cross, Divide, Fade, Pivot, Rotate, Slant, Sling, Spin, Spiral, Squash, Squeeze, Turn, Twirl };","import React from 'react'\nimport { Link } from 'gatsby'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport { ChevronDownIcon } from '@heroicons/react/outline'\nimport Hamburger from 'hamburger-react'\nimport InquiryLink from './InquiryLink'\nimport ExternalLink from './ExternalLink'\n\nconst Layout: React.FC<HasChildrenProps> = ({ children }) => {\n  return (\n    <div className='drawer drawer-end'>\n      <input id='my-drawer' type='checkbox' className='drawer-toggle' />\n      <div className='drawer-content'>\n        <Header />\n        <main>\n          {children}\n        </main>\n        <Footer />\n      </div>\n      <div className='drawer-side'>\n        <label htmlFor='my-drawer' className='drawer-overlay'></label>\n        <DrawerMenu />\n      </div>\n    </div>\n  )\n}\n\nconst DrawerMenu = () => {\n  return (\n    <ul className='menu p-4 overflow-y-auto w-4/5 md:w-2/5 bg-base-100 text-base-content'>\n      <li><Link to='/news/'>お知らせ</Link></li>\n      <li><Link to='/about/'>会社案内</Link></li>\n      <li><a href='#'>お客様インタビュー<ChevronDownIcon width={16} /></a></li>\n      <li className='ml-4'><Link to='/interviews/vook/'>株式会社Vook様</Link></li>\n      <li className='ml-4'><Link to='/interviews/buildit/'>株式会社ビルディット様</Link></li>\n      <li className='ml-4'><Link to='/interviews/codeorjp/'>NPO法人みんなのコード様</Link></li>\n      <li><InquiryLink>お問い合わせ</InquiryLink></li>\n    </ul>\n  )\n}\n\nconst Header = () => {\n  return (\n    <header className='navbar fixed p-4 z-10'>\n      <div className='container mx-auto max-w-6xl justify-between'>\n        <Link to='/' className='bg-base-100/80 rounded-box shadow-md px-4 py-2'>\n          <StaticImage placeholder='none' src='../images/logo/landscape.png' alt='' height={64} />\n        </Link>\n        <div className='bg-base-100/80 rounded-box shadow-md p-4'>\n          <label htmlFor='my-drawer' className='lg:hidden'>\n            <Hamburger toggled={false} label='menu' />\n          </label>\n          <ul className='hidden lg:flex menu menu-horizontal p-0'>\n            <li><Link to='/news/'>お知らせ</Link></li>\n            <li><Link to='/about/'>会社案内</Link></li>\n            <li>\n              <a href='#'>お客様インタビュー<ChevronDownIcon width={16} /></a>\n              <ul className='bg-base-100 shadow-md rounded-box'>\n                <li><Link to='/interviews/vook/'>株式会社Vook様</Link></li>\n                <li><Link to='/interviews/buildit/'>株式会社ビルディット様</Link></li>\n                <li><Link to='/interviews/codeorjp/'>NPO法人みんなのコード様</Link></li>\n              </ul>\n            </li>\n            <li><InquiryLink>お問い合わせ</InquiryLink></li>\n          </ul>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nconst Footer = () => {\n  return (\n    <footer className='footer footer-center p-10 bg-base-200'>\n      <div>\n        <StaticImage placeholder='none' src='../images/logo/cube.png' alt='株式会社スマートアルゴリズム' width={48} height={48} />\n        <p>&copy; 2022 Smart Algorithm Co., Ltd.</p>\n        <p>本サイトのソースコードを <ExternalLink href='https://github.com/s12m/s12m.github.io'>GitHubで公開</ExternalLink> しています</p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Layout\n","import React from 'react'\n\nconst BASE_URL = 'https://smartalgorithm.co.jp'\nconst DEFAULT_DESCRIPTION = '問題の本質を見抜き、ITの原理原則を理解した上で最適な解のために使いこなせる技術者こそ、ビジネス課題の根本的かつ迅速な解決に必要です。'\n\ntype Props = HasChildrenProps & {\n  pathname: string\n  title: string\n  description?: string\n  image?: string\n}\n\nconst MetaTags: React.FC<Props> = ({ pathname, title, description, image, children }) => {\n  description ??= DEFAULT_DESCRIPTION\n\n  return (\n    <>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"og:title\" content={title} />\n      <meta name=\"og:type\" content=\"website\" />\n      <meta name=\"og:url\" content={`${BASE_URL}${pathname}`} />\n      {image && (\n        <meta name=\"og:image\" content={`${BASE_URL}${image}`} />\n      )}\n      <meta name=\"og:description\" content={description} />\n      {children}\n    </>\n  )\n}\n\nexport default MetaTags\n"],"names":["ForwardRef","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","height","prototype","format","isLoading","isLoaded","images","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","sources","fallbackImage","paddingTop","maxWidth","display","React","alt","role","src","children","Fragment","Sizer","q","H","P","srcSet","decoding","undefined","fallback","t","sizes","Image","length","map","media","type","key","propTypes","PropTypes","Picture","displayName","isRequired","e","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","onError","as","className","preactClass","class","onStartLoad","onLoad","overflow","getWrapperProps","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","getSizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","document","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","memo","warn","GatsbyImageHydrator","GatsbyImage","se","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__error","imageData","__imageData","console","StaticImage","camelCase","input","options","Array","isArray","TypeError","pascalCase","x","trim","filter","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","href","target","ExternalLinkIcon","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","_slicedToArray","arr","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","Burger","_ref","_ref$color","color","_ref$direction","direction","_ref$distance","distance","_ref$duration","duration","_ref$easing","easing","_ref$hideOutline","hideOutline","label","_ref$lines","lines","onToggle","render","_ref$rounded","rounded","_ref$size","size","toggle","toggled","_useState2","useState","toggledInternal","toggleInternal","Math","max","min","room","round","barHeightRaw","barHeight","marginRaw","margin","topOffset","move","parseFloat","toFixed","time","burgerStyles","cursor","concat","userSelect","barStyles","background","toggleFunction","isToggled","handler","isLeft","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_extends","hasOwnProperty","this","o","onClick","onKeyUp","transform","tabIndex","DrawerMenu","Link","to","ChevronDownIcon","InquiryLink","Header","htmlFor","Hamburger","Footer","ExternalLink","id","BASE_URL","pathname","title","description","name","content"],"sourceRoot":""}