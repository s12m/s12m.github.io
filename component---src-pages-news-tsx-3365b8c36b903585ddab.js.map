{"version":3,"file":"component---src-pages-news-tsx-3365b8c36b903585ddab.js","mappings":"mIAmBA,IAbiC,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC5C,OACEC,EAAAA,cAAAA,UAAAA,CAASC,UAAU,qBAChBF,GACCC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,0BACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,6BAA6BF,IAG9CD,EARP,C,oECYA,IACA,EADiB,cAhBjB,SAA0BI,EAAOC,GAC/B,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,EACbC,OAAQ,eACR,cAAe,OACfC,IAAKR,GACJD,GAAqB,gBAAoB,OAAQ,CAClDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,iFAEP,ICDA,EARsC,SAAC,GAAwB,IAAtBhB,EAAqB,EAArBA,SAAUiB,EAAW,EAAXA,KACjD,OACEf,EAAAA,cAAAA,IAAAA,CAAGe,KAAMA,EAAMC,OAAO,SAASf,UAAU,6BACtCH,EAASE,EAAAA,cAACiB,EAAD,CAAkBhB,UAAU,cAAciB,MAAO,KAHjE,C,8CCmBA,IAnB8B,SAAC,GAAc,IACrCC,EADoC,EAAXC,KACbC,YAAYC,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAxC,IAEb,OACEzB,EAAAA,cAAAA,MAAAA,KACGmB,EAAKI,KAAI,WAAiCG,GAAjC,IAAG3B,EAAH,EAAGA,MAAO4B,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,IAAKC,EAAzB,EAAyBA,KAAzB,OACR7B,EAAAA,cAAAA,MAAAA,CAAK8B,IAAKF,GACR5B,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,WACbD,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,gCAAgC4B,GAChD7B,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,gCAA+BD,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,uBAAuB0B,IACtF3B,EAAAA,cAAAA,MAAAA,KAAKA,EAAAA,cAAC+B,EAAAA,EAAD,CAAchB,KAAMa,GAAO7B,KAEjC2B,EAAIP,EAAKa,OAAS,GAAKhC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,YAP1C,IALP,C,gIC8BO,SAASgC,EAAT,GAAuC,IAAvBC,EAAuB,EAAvBA,SACrB,OACElC,EAAAA,cAACmC,EAAAA,EAAD,CACEC,SAAUF,EAASE,SACnBrC,MAAM,yBAIX,CAVD,UA3B4D,SAAC,GAAa,IAAXqB,EAAW,EAAXA,KAC7D,OACEpB,EAAAA,cAACqC,EAAAA,EAAD,KACErC,EAAAA,cAACsC,EAAAA,EAAD,CAASvC,MAAM,QACbC,EAAAA,cAACuC,EAAAA,EAAD,KACEvC,EAAAA,cAACwC,EAAAA,EAAD,CAAMpB,KAAMA,MALtB,C","sources":["webpack://s12m.github.io/./src/components/Article.tsx","webpack://s12m.github.io/./node_modules/@heroicons/react/outline/esm/ExternalLinkIcon.js","webpack://s12m.github.io/./src/components/ExternalLink.tsx","webpack://s12m.github.io/./src/components/News.tsx","webpack://s12m.github.io/./src/pages/news.tsx"],"sourcesContent":["import React from 'react'\n\ntype Props = HasChildrenProps & {\n  title?: string\n}\n\nconst Article: React.FC<Props> = ({ children, title }) => {\n  return (\n    <article className='min-h-screen pb-8'>\n      {title && (\n        <div className='text-center pt-28 mb-6'>\n          <h1 className='bg-base-200 text-2xl py-8'>{title}</h1>\n        </div>\n      )}\n      {children}\n    </article>\n  )\n}\n\nexport default Article\n","import * as React from \"react\";\n\nfunction ExternalLinkIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(ExternalLinkIcon);\nexport default ForwardRef;","import React from 'react'\nimport { ExternalLinkIcon } from '@heroicons/react/outline'\n\ntype Props = HasChildrenProps & {\n  href: string\n}\n\nconst ExternalLink: React.FC<Props> = ({ children, href }) => {\n  return (\n    <a href={href} target='_blank' className='underline hover:underline'>\n      {children}<ExternalLinkIcon className='inline ml-1' width={16} />\n    </a>\n  )\n}\n\nexport default ExternalLink\n","import React from 'react'\nimport ExternalLink from './ExternalLink'\n\ntype Props = {\n  data: Queries.AllNewsYamlQuery\n}\n\nconst News: React.FC<Props> = ({ data }) => {\n  const news = data.allNewsYaml.edges.map(edge => edge.node)\n\n  return (\n    <div>\n      {news.map(({ title, category, url, date }, i) => (\n        <div key={url}>\n          <div className='md:flex'>\n            <span className='min-w-[8em] mr-2 text-center'>{date}</span>\n            <span className='min-w-[6em] mr-2 text-center'><span className='badge badge-outline'>{category}</span></span>\n            <div><ExternalLink href={url!}>{title}</ExternalLink></div>\n          </div>\n          {i < news.length - 1 && <div className='divider' />}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default News\n","import React from 'react'\nimport { HeadProps, PageProps, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Article from '../components/Article'\nimport Container from '../components/Container'\nimport News from '../components/News'\nimport MetaTags from '../components/MetaTags'\n\nconst Page: React.FC<PageProps<Queries.AllNewsYamlQuery>> = ({ data }) => {\n  return (\n    <Layout>\n      <Article title='お知らせ'>\n        <Container>\n          <News data={data} />\n        </Container>\n      </Article>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query AllNewsYaml {\n    allNewsYaml {\n      edges {\n        node {\n          title\n          category\n          url\n          date(formatString: \"YYYY年MM月DD日\")\n        }\n      }\n    }\n  }\n`\n\nexport default Page\n\nexport function Head({ location }: HeadProps) {\n  return (\n    <MetaTags\n      pathname={location.pathname}\n      title='お知らせ | 株式会社スマートアルゴリズム'\n    >\n    </MetaTags>\n  )\n}\n"],"names":["children","title","React","className","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","href","target","ExternalLinkIcon","width","news","data","allNewsYaml","edges","map","edge","node","i","category","url","date","key","ExternalLink","length","Head","location","MetaTags","pathname","Layout","Article","Container","News"],"sourceRoot":""}